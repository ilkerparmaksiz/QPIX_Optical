#!/bin/bash -l
## Export these
#export CRABPATH=/home/argon/Projects/Ilker/gxsim/CRAB/
older_opticks
source /home/argon/Projects/Ilker/marley/setup_marley.sh
cd /home/argon/Projects/Ilker/MarleyTest/macros
export GEOM=QPIX  # Geometry name
#source env.sh
export RNG_SEED=0
export RNG_OFFSET=0
## Repeats random values
#export OPTICKS_EVENT_SKIPAHEAD=0

## Match it to GEANT4
#export OPTICKS_EVENT_SKIPAHEAD=100000

## Opticks settings
#export OPTICKS_MAX_GENSTEP=40000000
if [[ -z "${Photon}" ]]; then
     export OPTICKS_MAX_PHOTON=30000000 # Max Amount of photons
else
     export OPTICKS_MAX_PHOTON=${Photon} # Max Amount of photons     
fi

export OPTICKS_INTEGRATION_MODE=3  # Running both GPU and CPU simulation
export OPTICKS_EVENT_MODE=Minimal  # Hits or Minimal Prefered. Hits will create .npy files in /tmp/user/opticks/GEOM/NEXUS_CRAB/nexus/ALL0

## Skipahead is used for offseting the random generator values so photons produce per event is not repeated
if [ -z $SKIPAHEAD ]; then
	echo " SKIPAHEAD is not set";
	export OPTICKS_EVENT_SKIPAHEAD=$OPTICKS_MAX_PHOTON
	echo "Setting SKIPAHEAD to $OPTICKS_EVENT_SKIPAHEAD";
	sleep 2
else
	export OPTICKS_EVENT_SKIPAHEAD=$SKIPAHEAD

fi
## Opticks Detector Identification (Boundary Names for Identifying small number of detectors)
export U4SensorIdentifierDefault__GLOBAL_SENSOR_BOUNDARY_LIST=$(cat << EOL 
  G4_Galactic/CamSurfaceBorder//MgF2
  G4_SILICON_DIOXIDE/PHOTOCATHODE//G4_Al
  G4_Galactic/CamSurfaceBorder/CamSurfaceBorder/MgF2
  G4_Galactic/PMTSurfaceBorder//MgF2
  G4_Galactic/PMTSurfaceBorder/PMTSurfaceBorder/MgF2
EOL
)

### Lets Check if Curand file present if not then create it 
##
CurandBinPath=$HOME/.opticks/rngcache/RNG/QCurandState_${OPTICKS_MAX_PHOTON}_${RNG_SEED}_${RNG_OFFSET}.bin

#echo $CurandBinPath
if ! test -f $CurandBinPath; then
   echo "Creating Curand Binary File .."	
   echo "$CurandBinPath"
   sleep 2 ## Delay 2s so user knows we are creating curand file
   export OPTICKS_QUDARAP_RNGMAX=$OPTICKS_MAX_PHOTON/1000000
   qudarap-
   qudarap-prepare-installation
fi
## default setting of the opticks
#export OPTICKS_RG_MODE="simulate" # Simulate or Render
#export OPTICKS_HIT_MASK="SD" # getting hits SD is Surface Detect This can be changed to other flags SA, Surface Absorbtion etc.



## for debugging purposeses
#export QSim=INFO
#export SEvt=INFO
#export QEvent=INFO
#export G4CXOpticks=INFO
#export U4=INFO
#export SSim=INFO
#export CSGImport=INFO
#export U4Material=INFO
#export X4PhysicalVolume=INFO
#export U4VolumeMaker=INFO
#export X4Geo=INFO
#export SSim__stree_level=1
#export GBndLib=INFO
#export ShimG4OpAbsorption=INFO
#export G4CXOpticks__simulate_saveEvent=0
export G4CXOpticks__setGeometry_saveGeometry=$HOME/.opticks/GEOM/$GEOM
export G4CXOpticks__saveGeometry_saveGGeo=0
export GGeo__postDirectTranslation_save=0
#export IDPath=$G4CXOpticks__setGeometry_saveGeometry
#export PIDX=100
#export CFBASE=$HOME/.opticks/GEOM/$GEOM

echo "RNG_Offset -->$RNG_OFSEET"
echo "RNG SEED  --> $RNG_SEED"
echo "SKIPAHEAD--> $OPTICKS_EVENT_SKIPAHEAD"
echo "MaxPhoton--> $OPTICKS_MAX_PHOTON"
sleep 2
